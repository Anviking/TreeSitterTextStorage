


public enum Python: UInt16 {
    case sym__newline = 1
    case sym__indent = 2
    case sym__dedent = 3
    case anon_sym_import = 4
    case anon_sym_from = 5
    case anon_sym_DOT = 6
    case anon_sym_LPAREN = 7
    case anon_sym_RPAREN = 8
    case anon_sym_COMMA = 9
    case anon_sym_as = 10
    case anon_sym_STAR = 11
    case anon_sym_print = 12
    case anon_sym_return = 13
    case anon_sym_del = 14
    case anon_sym_raise = 15
    case sym_pass_statement = 16
    case sym_break_statement = 17
    case sym_continue_statement = 18
    case anon_sym_if = 19
    case anon_sym_COLON = 20
    case anon_sym_elif = 21
    case anon_sym_else = 22
    case anon_sym_for = 23
    case anon_sym_in = 24
    case anon_sym_while = 25
    case anon_sym_try = 26
    case anon_sym_except = 27
    case anon_sym_finally = 28
    case anon_sym_with = 29
    case anon_sym_def = 30
    case anon_sym_EQ = 31
    case anon_sym_class = 32
    case anon_sym_AT = 33
    case anon_sym_not = 34
    case anon_sym_and = 35
    case anon_sym_or = 36
    case anon_sym_PLUS = 37
    case anon_sym_DASH = 38
    case anon_sym_SLASH = 39
    case anon_sym_PERCENT = 40
    case anon_sym_SLASH_SLASH = 41
    case anon_sym_STAR_STAR = 42
    case anon_sym_PIPE = 43
    case anon_sym_AMP = 44
    case anon_sym_CARET = 45
    case anon_sym_LT_LT = 46
    case anon_sym_GT_GT = 47
    case anon_sym_LT = 48
    case anon_sym_LT_EQ = 49
    case anon_sym_EQ_EQ = 50
    case anon_sym_BANG_EQ = 51
    case anon_sym_GT_EQ = 52
    case anon_sym_GT = 53
    case anon_sym_LT_GT = 54
    case anon_sym_is = 55
    case anon_sym_lambda = 56
    case anon_sym_PLUS_EQ = 57
    case anon_sym_DASH_EQ = 58
    case anon_sym_STAR_EQ = 59
    case anon_sym_SLASH_EQ = 60
    case anon_sym_PERCENT_EQ = 61
    case anon_sym_STAR_STAR_EQ = 62
    case anon_sym_GT_GT_EQ = 63
    case anon_sym_LT_LT_EQ = 64
    case anon_sym_AMP_EQ = 65
    case anon_sym_CARET_EQ = 66
    case anon_sym_PIPE_EQ = 67
    case anon_sym_yield = 68
    case anon_sym_LBRACK = 69
    case anon_sym_RBRACK = 70
    case sym_ellipsis = 71
    case anon_sym_LBRACE = 72
    case anon_sym_RBRACE = 73
    case sym_string = 74
    case sym_number = 75
    case sym_identifier = 76
    case sym_true = 77
    case sym_false = 78
    case sym_none = 79
    case sym_comment = 80
    case sym_module = 81
    case sym__statement = 82
    case sym__simple_statement = 83
    case sym_import_statement = 84
    case sym_import_from_statement = 85
    case sym__import_list = 86
    case sym_aliased_import = 87
    case sym_wildcard_import = 88
    case sym_print_statement = 89
    case sym_expression_statement = 90
    case sym_return_statement = 91
    case sym_delete_statement = 92
    case sym_raise_statement = 93
    case sym__compound_statement = 94
    case sym_if_statement = 95
    case sym_elif_clause = 96
    case sym_else_clause = 97
    case sym_for_statement = 98
    case sym_while_statement = 99
    case sym_try_statement = 100
    case sym_except_clause = 101
    case sym_finally_clause = 102
    case sym_with_statement = 103
    case sym_with_item = 104
    case sym_function_definition = 105
    case sym_parameters = 106
    case sym__parameter_list = 107
    case sym_default_parameter = 108
    case sym_list_splat_parameter = 109
    case sym_dictionary_splat_parameter = 110
    case sym_class_definition = 111
    case sym_decorated_definition = 112
    case sym_decorator = 113
    case sym__suite = 114
    case sym_arguments = 115
    case sym_variables = 116
    case sym_expression_list = 117
    case sym_dotted_name = 118
    case sym__expression = 119
    case sym__primary_expression = 120
    case sym_not_operator = 121
    case sym_boolean_operator = 122
    case sym_binary_operator = 123
    case sym_unary_operator = 124
    case sym_comparison_operator = 125
    case sym_lambda = 126
    case sym_assignment = 127
    case sym_augmented_assignment = 128
    case sym_yield = 129
    case sym_attribute = 130
    case sym_subscript = 131
    case sym_slice = 132
    case sym_call = 133
    case sym_keyword_argument = 134
    case sym_list_splat_argument = 135
    case sym_dictionary_splat_argument = 136
    case sym_list = 137
    case sym_list_comprehension = 138
    case sym_dictionary = 139
    case sym_dictionary_comprehension = 140
    case sym_pair = 141
    case sym_set = 142
    case sym_set_comprehension = 143
    case sym_tuple = 144
    case sym_generator_expression = 145
    case sym_concatenated_string = 146
    case aux_sym_module_repeat1 = 147
    case aux_sym__statement_repeat1 = 148
    case aux_sym_import_from_statement_repeat1 = 149
    case aux_sym__import_list_repeat1 = 150
    case aux_sym_print_statement_repeat1 = 151
    case aux_sym_if_statement_repeat1 = 152
    case aux_sym_try_statement_repeat1 = 153
    case aux_sym_with_statement_repeat1 = 154
    case aux_sym__parameter_list_repeat1 = 155
    case aux_sym_decorated_definition_repeat1 = 156
    case aux_sym_variables_repeat1 = 157
    case aux_sym_dotted_name_repeat1 = 158
    case aux_sym_comparison_operator_repeat1 = 159
    case aux_sym_subscript_repeat1 = 160
    case aux_sym_call_repeat1 = 161
    case aux_sym_call_repeat2 = 162
    case aux_sym_dictionary_repeat1 = 163
    case aux_sym_concatenated_string_repeat1 = 164
};
