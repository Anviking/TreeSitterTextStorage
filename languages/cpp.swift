

public enum Cpp: UInt16 {
    case sym_translation_unit = 1
    case sym__preproc_statement = 2
    case sym_preproc_include = 3
    case sym_preproc_def = 4
    case sym_preproc_function_def = 5
    case sym_preproc_params = 6
    case sym_preproc_call = 7
    case sym_preproc_ifdef = 8
    case sym_preproc_else = 9
    case sym_function_definition = 10
    case sym_declaration = 11
    case sym__declaration_specifiers = 12
    case sym__declarator = 13
    case sym__abstract_declarator = 14
    case sym_pointer_declarator = 15
    case sym_abstract_pointer_declarator = 16
    case sym_function_declarator = 17
    case sym_abstract_function_declarator = 18
    case sym_array_declarator = 19
    case sym_abstract_array_declarator = 20
    case sym_init_declarator = 21
    case sym_compound_statement = 22
    case sym_storage_class_specifier = 23
    case sym_type_qualifier = 24
    case sym__type_specifier = 25
    case sym_sized_type_specifier = 26
    case sym_enum_specifier = 27
    case sym__enum_specifier_contents = 28
    case sym_struct_specifier = 29
    case sym_union_specifier = 30
    case sym_struct_declaration = 31
    case sym_enumerator = 32
    case sym_parameter_type_list = 33
    case sym_parameter_declaration = 34
    case sym__statement = 35
    case sym_labeled_statement = 36
    case sym_expression_statement = 37
    case sym_if_statement = 38
    case sym_switch_statement = 39
    case sym_case_statement = 40
    case sym_while_statement = 41
    case sym_do_statement = 42
    case sym_for_statement = 43
    case sym_return_statement = 44
    case sym_break_statement = 45
    case sym_continue_statement = 46
    case sym_goto_statement = 47
    case sym__expression = 48
    case sym_conditional_expression = 49
    case sym_assignment_expression = 50
    case sym_pointer_expression = 51
    case sym_logical_expression = 52
    case sym_bitwise_expression = 53
    case sym_equality_expression = 54
    case sym_relational_expression = 55
    case sym_shift_expression = 56
    case sym_math_expression = 57
    case sym_cast_expression = 58
    case sym_sizeof_expression = 59
    case sym_subscript_expression = 60
    case sym_call_expression = 61
    case sym_field_expression = 62
    case sym_compound_literal_expression = 63
    case sym_type_name = 64
    case sym_initializer_list = 65
    case sym__initializer_list_contents = 66
    case sym_designator = 67
    case sym__empty_declaration = 68
    case sym_macro_type_specifier = 69
    case sym_template_call = 70
    case aux_sym_translation_unit_repeat1 = 71
    case aux_sym_preproc_params_repeat1 = 72
    case aux_sym_preproc_ifdef_repeat1 = 73
    case aux_sym_declaration_repeat1 = 74
    case aux_sym__declaration_specifiers_repeat1 = 75
    case aux_sym_array_declarator_repeat1 = 76
    case aux_sym_compound_statement_repeat1 = 77
    case aux_sym_sized_type_specifier_repeat1 = 78
    case aux_sym_struct_specifier_repeat1 = 79
    case aux_sym_struct_declaration_repeat1 = 80
    case aux_sym_parameter_type_list_repeat1 = 81
    case aux_sym_for_statement_repeat1 = 82
    case aux_sym__initializer_list_contents_repeat1 = 83
    case anon_sym_POUNDinclude = 84
    case anon_sym_POUNDdefine = 85
    case anon_sym_LF = 86
    case anon_sym_LPAREN = 87
    case anon_sym_DOT_DOT_DOT = 88
    case anon_sym_COMMA = 89
    case anon_sym_RPAREN = 90
    case sym_preproc_arg = 91
    case anon_sym_POUNDifdef = 92
    case anon_sym_POUNDifndef = 93
    case anon_sym_POUNDendif = 94
    case anon_sym_POUNDelse = 95
    case sym_preproc_directive = 96
    case anon_sym_SEMI = 97
    case anon_sym_STAR = 98
    case anon_sym_LBRACK = 99
    case anon_sym_static = 100
    case anon_sym_RBRACK = 101
    case anon_sym_EQ = 102
    case anon_sym_LBRACE = 103
    case anon_sym_RBRACE = 104
    case anon_sym_typedef = 105
    case anon_sym_extern = 106
    case anon_sym_auto = 107
    case anon_sym_register = 108
    case anon_sym_const = 109
    case anon_sym_restrict = 110
    case anon_sym_volatile = 111
    case sym_function_specifier = 112
    case anon_sym_unsigned = 113
    case anon_sym_long = 114
    case anon_sym_short = 115
    case anon_sym_enum = 116
    case anon_sym_struct = 117
    case anon_sym_union = 118
    case anon_sym_COLON = 119
    case anon_sym_if = 120
    case anon_sym_else = 121
    case anon_sym_switch = 122
    case anon_sym_case = 123
    case anon_sym_default = 124
    case anon_sym_while = 125
    case anon_sym_do = 126
    case anon_sym_for = 127
    case anon_sym_return = 128
    case anon_sym_break = 129
    case anon_sym_continue = 130
    case anon_sym_goto = 131
    case anon_sym_QMARK = 132
    case anon_sym_STAR_EQ = 133
    case anon_sym_SLASH_EQ = 134
    case anon_sym_PERCENT_EQ = 135
    case anon_sym_PLUS_EQ = 136
    case anon_sym_DASH_EQ = 137
    case anon_sym_LT_LT_EQ = 138
    case anon_sym_GT_GT_EQ = 139
    case anon_sym_AMP_EQ = 140
    case anon_sym_CARET_EQ = 141
    case anon_sym_PIPE_EQ = 142
    case anon_sym_AMP = 143
    case anon_sym_PIPE_PIPE = 144
    case anon_sym_AMP_AMP = 145
    case anon_sym_BANG = 146
    case anon_sym_PIPE = 147
    case anon_sym_CARET = 148
    case anon_sym_TILDE = 149
    case anon_sym_EQ_EQ = 150
    case anon_sym_BANG_EQ = 151
    case anon_sym_LT = 152
    case anon_sym_GT = 153
    case anon_sym_LT_EQ = 154
    case anon_sym_GT_EQ = 155
    case anon_sym_LT_LT = 156
    case anon_sym_GT_GT = 157
    case anon_sym_PLUS = 158
    case anon_sym_DASH = 159
    case anon_sym_SLASH = 160
    case anon_sym_PERCENT = 161
    case anon_sym_DASH_DASH = 162
    case anon_sym_PLUS_PLUS = 163
    case anon_sym_sizeof = 164
    case anon_sym_DOT = 165
    case anon_sym_DASH_GT = 166
    case sym_number_literal = 167
    case sym_char_literal = 168
    case sym_string_literal = 169
    case sym_system_lib_string = 170
    case sym_identifier = 171
    case sym_comment = 172
};
