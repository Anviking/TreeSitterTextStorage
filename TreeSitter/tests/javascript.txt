var hljs = require('highlight.js')
var swift = hljs.getLanguage('swift')
var c = hljs.getLanguage('cpp')
//console.log(swift)

function JLKeywordScope(keywords, type) {
	return "JLKeywordScope(keywords: \"" + keywords + "\", tokenType: " + type + ")"
}

function convertKeywords(keywords) {
	var key = keywords.keyword
	var built_in = keywords.built_in
	var literal = keywords.literal
	return [
	"let keywords = " + JLKeywordScope(key, ".keyword"),
	"let builtin = " + JLKeywordScope(key, ".otherMethodNames"),
	"let literals = " + JLKeywordScope(key, ".keyword"),
	]
}

function JLNestedScope(begin, end) {
	return "JLTokenizingScope(incrementingPattern: \"" + begin + "\", decrementingPattern: \"" + end + "\", hollow: false)"
}

var languages = hljs.listLanguages()


function commentScopesFromLanguage(language) {
	return language.contains
	.filter(l => l.className == 'comment')
	.map(s => JLNestedScope(s.begin, s.end))
}

//console.log(new Set(b))
console.log(convertKeywords(c.keywords))
console.log(commentScopesFromLanguage(c))

//console.log(c.contains[1])
