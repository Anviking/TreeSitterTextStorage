#include "tree_sitter/parser.h"

#define STATE_COUNT 1241
#define SYMBOL_COUNT 172

enum {
    sym_translation_unit = 1,
    sym__preproc_statement = 2,
    sym_preproc_include = 3,
    sym_preproc_def = 4,
    sym_preproc_function_def = 5,
    sym_preproc_params = 6,
    sym_preproc_call = 7,
    sym_preproc_ifdef = 8,
    sym_preproc_else = 9,
    sym_function_definition = 10,
    sym_declaration = 11,
    sym__declaration_specifiers = 12,
    sym__declarator = 13,
    sym__abstract_declarator = 14,
    sym_pointer_declarator = 15,
    sym_abstract_pointer_declarator = 16,
    sym_function_declarator = 17,
    sym_abstract_function_declarator = 18,
    sym_array_declarator = 19,
    sym_abstract_array_declarator = 20,
    sym_init_declarator = 21,
    sym_compound_statement = 22,
    sym_storage_class_specifier = 23,
    sym_type_qualifier = 24,
    sym__type_specifier = 25,
    sym_sized_type_specifier = 26,
    sym_enum_specifier = 27,
    sym__enum_specifier_contents = 28,
    sym_struct_specifier = 29,
    sym_union_specifier = 30,
    sym_struct_declaration = 31,
    sym_enumerator = 32,
    sym_parameter_type_list = 33,
    sym_parameter_declaration = 34,
    sym__statement = 35,
    sym_labeled_statement = 36,
    sym_expression_statement = 37,
    sym_if_statement = 38,
    sym_switch_statement = 39,
    sym_case_statement = 40,
    sym_while_statement = 41,
    sym_do_statement = 42,
    sym_for_statement = 43,
    sym_return_statement = 44,
    sym_break_statement = 45,
    sym_continue_statement = 46,
    sym_goto_statement = 47,
    sym__expression = 48,
    sym_conditional_expression = 49,
    sym_assignment_expression = 50,
    sym_pointer_expression = 51,
    sym_logical_expression = 52,
    sym_bitwise_expression = 53,
    sym_equality_expression = 54,
    sym_relational_expression = 55,
    sym_shift_expression = 56,
    sym_math_expression = 57,
    sym_cast_expression = 58,
    sym_sizeof_expression = 59,
    sym_subscript_expression = 60,
    sym_call_expression = 61,
    sym_field_expression = 62,
    sym_compound_literal_expression = 63,
    sym_type_name = 64,
    sym_initializer_list = 65,
    sym__initializer_list_contents = 66,
    sym_designator = 67,
    sym__empty_declaration = 68,
    sym_macro_type_specifier = 69,
    aux_sym_translation_unit_repeat1 = 70,
    aux_sym_preproc_params_repeat1 = 71,
    aux_sym_preproc_ifdef_repeat1 = 72,
    aux_sym_declaration_repeat1 = 73,
    aux_sym__declaration_specifiers_repeat1 = 74,
    aux_sym_array_declarator_repeat1 = 75,
    aux_sym_compound_statement_repeat1 = 76,
    aux_sym_sized_type_specifier_repeat1 = 77,
    aux_sym_struct_specifier_repeat1 = 78,
    aux_sym_struct_declaration_repeat1 = 79,
    aux_sym_parameter_type_list_repeat1 = 80,
    aux_sym_for_statement_repeat1 = 81,
    aux_sym__initializer_list_contents_repeat1 = 82,
    anon_sym_POUNDinclude = 83,
    anon_sym_POUNDdefine = 84,
    anon_sym_LF = 85,
    anon_sym_LPAREN = 86,
    anon_sym_DOT_DOT_DOT = 87,
    anon_sym_COMMA = 88,
    anon_sym_RPAREN = 89,
    sym_preproc_arg = 90,
    anon_sym_POUNDifdef = 91,
    anon_sym_POUNDifndef = 92,
    anon_sym_POUNDendif = 93,
    anon_sym_POUNDelse = 94,
    sym_preproc_directive = 95,
    anon_sym_SEMI = 96,
    anon_sym_STAR = 97,
    anon_sym_LBRACK = 98,
    anon_sym_static = 99,
    anon_sym_RBRACK = 100,
    anon_sym_EQ = 101,
    anon_sym_LBRACE = 102,
    anon_sym_RBRACE = 103,
    anon_sym_typedef = 104,
    anon_sym_extern = 105,
    anon_sym_auto = 106,
    anon_sym_register = 107,
    anon_sym_const = 108,
    anon_sym_restrict = 109,
    anon_sym_volatile = 110,
    sym_function_specifier = 111,
    anon_sym_unsigned = 112,
    anon_sym_long = 113,
    anon_sym_short = 114,
    anon_sym_enum = 115,
    anon_sym_struct = 116,
    anon_sym_union = 117,
    anon_sym_COLON = 118,
    anon_sym_if = 119,
    anon_sym_else = 120,
    anon_sym_switch = 121,
    anon_sym_case = 122,
    anon_sym_default = 123,
    anon_sym_while = 124,
    anon_sym_do = 125,
    anon_sym_for = 126,
    anon_sym_return = 127,
    anon_sym_break = 128,
    anon_sym_continue = 129,
    anon_sym_goto = 130,
    anon_sym_QMARK = 131,
    anon_sym_STAR_EQ = 132,
    anon_sym_SLASH_EQ = 133,
    anon_sym_PERCENT_EQ = 134,
    anon_sym_PLUS_EQ = 135,
    anon_sym_DASH_EQ = 136,
    anon_sym_LT_LT_EQ = 137,
    anon_sym_GT_GT_EQ = 138,
    anon_sym_AMP_EQ = 139,
    anon_sym_CARET_EQ = 140,
    anon_sym_PIPE_EQ = 141,
    anon_sym_AMP = 142,
    anon_sym_PIPE_PIPE = 143,
    anon_sym_AMP_AMP = 144,
    anon_sym_BANG = 145,
    anon_sym_PIPE = 146,
    anon_sym_CARET = 147,
    anon_sym_TILDE = 148,
    anon_sym_EQ_EQ = 149,
    anon_sym_BANG_EQ = 150,
    anon_sym_LT = 151,
    anon_sym_GT = 152,
    anon_sym_LT_EQ = 153,
    anon_sym_GT_EQ = 154,
    anon_sym_LT_LT = 155,
    anon_sym_GT_GT = 156,
    anon_sym_PLUS = 157,
    anon_sym_DASH = 158,
    anon_sym_SLASH = 159,
    anon_sym_PERCENT = 160,
    anon_sym_DASH_DASH = 161,
    anon_sym_PLUS_PLUS = 162,
    anon_sym_sizeof = 163,
    anon_sym_DOT = 164,
    anon_sym_DASH_GT = 165,
    sym_number_literal = 166,
    sym_char_literal = 167,
    sym_string_literal = 168,
    sym_system_lib_string = 169,
    sym_identifier = 170,
    sym_comment = 171,
};
